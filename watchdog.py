import asyncio
import logging
from mcstatus import JavaServer

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
SERVER_ADDRESS = "example.com"  # –∏–ª–∏ IP
QUERY_PORT = 25565
CHECK_INTERVAL = 60  # —Å–µ–∫—É–Ω–¥ –º–µ–∂–¥—É –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏

#LOG_FILE = "/var/log/mc_query_watchdog.log"

# === –õ–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ===
logging.basicConfig(
    #filename=LOG_FILE,
    format="%(asctime)s [%(levelname)s] %(message)s",
    level=logging.INFO
)

async def check_server_players(server_address: str, port: int):
    try:
        server = await JavaServer.async_lookup(f"{server_address}:{port}")
        status = await server.async_query()  # Query-–∑–∞–ø—Ä–æ—Å

        players_online = status.players.online
        player_names = status.players.list
        logging.info(f"üü¢ –û–Ω–ª–∞–π–Ω {players_online} –∏–≥—Ä–æ–∫–æ–≤: {player_names}")
        return players_online, player_names

    except Exception as e:
        logging.warning(f"üî¥ –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        return None, []

async def main():
    while True:
        players, names = await check_server_players(SERVER_ADDRESS, QUERY_PORT)

        # –ü—Ä–∏–º–µ—Ä —Ä–µ–∞–∫—Ü–∏–∏: –µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω –∏ 0 –∏–≥—Ä–æ–∫–æ–≤
        if players == 0:
            logging.info("–ù–∏–∫–æ–≥–æ –Ω–µ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.")
            # –¢—É—Ç –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å shutdown API –∏–ª–∏ —Å–ª–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ

        await asyncio.sleep(CHECK_INTERVAL)

asyncio.run(main())
