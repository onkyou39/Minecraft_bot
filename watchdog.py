import logging
import time
import os
from dotenv import load_dotenv
from mcstatus import JavaServer
from typing import Optional

load_dotenv()

SERVER_ADDRESS = os.getenv("SERVER_ADDRESS")  # –∏–ª–∏ IP
QUERY_PORT = 25565
CHECK_INTERVAL = 60  # —Å–µ–∫—É–Ω–¥ –º–µ–∂–¥—É –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
WD_POWEROFF_COOLDOWN = 10 * 60 # 10 –º–∏–Ω—É—Ç


logging.basicConfig(
    format="%(asctime)s [%(levelname)s] %(message)s",
    level=logging.INFO
)


logger = logging.getLogger("watchdog")
logging.getLogger("watchdog").setLevel(logging.DEBUG)

async def get_players_list():
    return await check_server_players(SERVER_ADDRESS, QUERY_PORT)


async def check_server_players(server_address: str, port: int):
    try:
        server = await JavaServer.async_lookup(f"{server_address}:{port}", timeout=2)
        status = await server.async_status()  # Query-–∑–∞–ø—Ä–æ—Å

        players_online = status.players.online
        logger.debug(f"Watchdog: ONLINE {players_online} players online.")
        return players_online

    except Exception as e:
        logger.debug(f"Watchdog: OFFLINE  Minecraft server unreachable. {e}")
        return None


empty_since: Optional[float] = None  # –ö–æ–≥–¥–∞ —Å–µ—Ä–≤–µ—Ä —Å—Ç–∞–ª –ø—É—Å—Ç—ã–º
notified = False # –§–ª–∞–≥–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
is_fresh_start = True


async def watchdog_tick(shutdown_callback, notify_callback=None):
    global empty_since, notified, is_fresh_start
    players = await check_server_players(SERVER_ADDRESS, QUERY_PORT)
    now = time.time()

    if players is not None and is_fresh_start:
        if notify_callback:
            await notify_callback(f"‚úÖ Minecraft —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω.")
        is_fresh_start = False

    if players == 0:
        if empty_since is None:
            empty_since = now
            logger.info("Watchdog: server is empty, starting shutdown timer")
        elif now - empty_since >= WD_POWEROFF_COOLDOWN:
            logger.warning("Watchdog: server remained empty, cooldown passed ‚Äî shutting down VPS")
            if notify_callback:
                await notify_callback(f"üõë –ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ –±—ã–ª–æ –∏–≥—Ä–æ–∫–æ–≤ –±–æ–ª—å—à–µ {WD_POWEROFF_COOLDOWN // 60} –º–∏–Ω—É—Ç."
                                      f" –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –Ω–∞ –≤—ã–∫–ª—é—á–µ–Ω–∏–µ VPS.")
            await shutdown_callback()
            empty_since = None  # Reset after shutdown
            notified = False  # —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –ø–æ—Å–ª–µ –≤—ã–∫–ª—é—á–µ–Ω–∏—è
            is_fresh_start = True # —Å–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—É—Å–∫ –±—É–¥–µ—Ç –Ω–æ–≤—ã–º
        else:
            remaining = int(WD_POWEROFF_COOLDOWN - (now - empty_since))
            logger.info(f"Watchdog: server still empty, {remaining} seconds left until shutdown")
            if notify_callback and not notified:
                await notify_callback(f"‚ÑπÔ∏è –ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ—Ç –∏–≥—Ä–æ–∫–æ–≤. "
                                      f"–°–µ—Ä–≤–µ—Ä –±—É–¥–µ—Ç –≤—ã–∫–ª—é—á–µ–Ω —á–µ—Ä–µ–∑ {(remaining + 60) // 60} –º–∏–Ω—É—Ç.")
                                     # –ø–æ–ø—Ä–∞–≤–∫–∞ –Ω–∞ –∑–∞–¥–µ—Ä–∂–∫—É –≤—ã–∑–æ–≤–∞ –∑–∞–¥–∞—á–∏
                notified = True  # –¥–ª—è –æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞

    else:
        if empty_since is not None:
            logger.info("Watchdog: players joined ‚Äî resetting shutdown timer")
            empty_since = None  # Reset timer because players are online
